https://developer.mozilla.org/de/docs/Web/JavaScript/Guide/Using_promises
https://medium.com/@bluepnume/learn-about-promises-before-you-start-using-async-await-eb148164a9c8
https://javascript.info/async-await
https://www.promisejs.org/api/
https://www.youtube.com/watch?v=2d7s3spWAzo
https://dexie.org/docs/Tutorial/Best-Practices

var resolveFn = function() {
    console.log("resolve");
}
var rejectFn = function() {
    console.log("reject");
}

--snip--

function successCallback(result) {
  console.log("It succeeded with " + result);
}

function failureCallback(error) {
  console.log("It failed with " + error);
}

var promise = new Promise((resolve, reject) => {
    if (Math.random() > .5) {
        resolve("SUCCESS");
    } else {
        reject("FAILURE");
    }
})

promise.then(successCallback, failureCallback);

--snip--

function successCallback(result) {
  console.log("It succeeded with " + result);
}

function failureCallback(error) {
  console.log("It failed with " + error);
}

async function getPromise() {
    return new Promise((resolve, reject) => {
        resolve = successCallback;
        reject = failureCallback
        if (Math.random() > .5) {
            resolve("SUCCESS");
        } else {
            reject("FAILURE");
        }
    })
}

async function doIt() {
    try {
        await getPromise();
    } catch (error) {
        console.error(error);
    }
}

doIt()